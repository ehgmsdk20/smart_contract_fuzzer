{"function": "uniswapV3SwapCallback", "params": [55213406888331704499490599763723776322983082088505290042533199476535399551340, 43077892516995233622837525047999872198547830330342911927164767724165613417154, "0xdcaf25919a7454b11a469d09727648c0c59b38242d2317ebb1fbce1ae260cee6"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e337a11ae4c4e5abbc2c946e886fdcf2b99bdc2aa85d5ccb3fdac9837dc34f8116c5f3d391ed3aff5165b9fcf61a8e3dc7e8b5a24f4496e9708c53aff38614ef2c200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020dcaf25919a7454b11a469d09727648c0c59b38242d2317ebb1fbce1ae260cee6", "gas_used": 24663, "transaction_hash": "0xb482446bc70a29d2bdcb20bc7bc3ea2b67764230ea47fd91011c038522d9bb00"}
{"function": "uniswapV3SwapCallback", "params": [34454784014692170566764858870977873040374404077401910367059653655277983923259, 27153854443220297295213209548785329289107071313679100167220191161599339863736, "0x9b583b03e59afca86fdc2a7a0cd04e6cfdac422d368a3ed82c6824bbb6f7c9d5"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e334c2cb777e10802243914196fd9d0fc2dc1c4fa7ce82a24f4f7f612cbcb367c3b3c08897728195b92503f42cf6dc08ffcee4e2143dacee66ed0b89aaac7a91eb8000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000209b583b03e59afca86fdc2a7a0cd04e6cfdac422d368a3ed82c6824bbb6f7c9d5", "gas_used": 24663, "transaction_hash": "0xc16c47d65fc4100354013a9f5020fe394c80b7bd5b47c1acf62c28bf64b89c35"}
{"function": "uniswapV3SwapCallback", "params": [-52333366293952705266981084822286066742784761056279782061529307768015879581251, -26878720052193423677516398755005506827689860437514209314671373784861154439598, "0x7c41c6a73fd08a0114b3fb6a81bb759c84a7dad2aa07caba9af3430eb0ec525e"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e338c4c5d46901c13cd3d0d4e47e55f7509075fa44eeecb491acac3d9012c8151bdc4932efe9915c205bde5fe30d49a69ec28db244a67decca78830f6bde01c8e52000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000207c41c6a73fd08a0114b3fb6a81bb759c84a7dad2aa07caba9af3430eb0ec525e", "gas_used": 24663, "transaction_hash": "0x02406b9691e667ddd2f575b88a6e2821043407c1037d2594df3e41ba7c9e9874"}
{"function": "swapForExact1Multi", "params": ["0xf8ed153d65a9fd13c396056dfd7c808235d52a75", "0x7fa21142d9bf11a89ca4e572de4c8b112d2fe339", "0x2870124328a1e92765ff3ab20092fe751f60011b", 49715], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b68000000000000000000000000f8ed153d65a9fd13c396056dfd7c808235d52a750000000000000000000000007fa21142d9bf11a89ca4e572de4c8b112d2fe3390000000000000000000000002870124328a1e92765ff3ab20092fe751f60011b000000000000000000000000000000000000000000000000000000000000c233", "gas_used": 24514, "transaction_hash": "0xe6e9b258c36b8ed1ac5d8db8272cc1969ea6532e39b8909af952fac85d67b2ad"}
{"function": "uniswapV3SwapCallback", "params": [56900347569488353558375398990523250628923621011450613246660566954572122064678, 16793055923660466148916448978427865330701128830026784095727438386256157005176, "0xc75c3c6b7ddd016d9258b68af2300281a521e333abfbe654307195a01ebb8514"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e337dcc7497cf5b06922fdb15d3b23a4b7c2160c928484f8a4cb256a69283ae87262520886735736abec4def9ae7736729aae08d16c89f269986f5f9ed04b02d57800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020c75c3c6b7ddd016d9258b68af2300281a521e333abfbe654307195a01ebb8514", "gas_used": 24663, "transaction_hash": "0x53deaec8939ace19ac9d4c29ea1f08665f7e15d359666ca80e5f6ab8839d274c"}
{"function": "swapForExact0Multi", "params": ["0xc40f2c8648bfc39acea94781612cadd1651f0988", "0x5a4d8ece95a0ea225338267cf5721b3ba660ced1", "0x51d8d8ead5098f434b6212ad97479514c37194ae", 85444], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c7000000000000000000000000c40f2c8648bfc39acea94781612cadd1651f09880000000000000000000000005a4d8ece95a0ea225338267cf5721b3ba660ced100000000000000000000000051d8d8ead5098f434b6212ad97479514c37194ae0000000000000000000000000000000000000000000000000000000000014dc4", "gas_used": 24559, "transaction_hash": "0xdf16fea28ac282eb624a1b2677ce0a3ad69abafcb60a3e93ebf127e9e26350e3"}
{"function": "swapForExact0Multi", "params": ["0x92edc69b8b7890cf25b0be709820a6ed5d00cae5", "0x323d9ddba28ccff52a3ce8146e1d14e954b915ac", "0xf0cc7c7776df7b003988574d9e6f22226f644487", 35754], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c700000000000000000000000092edc69b8b7890cf25b0be709820a6ed5d00cae5000000000000000000000000323d9ddba28ccff52a3ce8146e1d14e954b915ac000000000000000000000000f0cc7c7776df7b003988574d9e6f22226f6444870000000000000000000000000000000000000000000000000000000000008baa", "gas_used": 24523, "transaction_hash": "0x1de1f783ee52853e1d2c8efd06db29173fd6e1d81ad81e18105a1081efb3c084"}
{"function": "uniswapV3SwapCallback", "params": [21119920272398889267100452146618217710370422492810478381274229424266391519783, 44596617219197699944170273657802420001368060959691331750194575767516920642393, "0x17f40ce4070fbad2d2a76c92352deed4877d8a4d1833d355cf538121201dd5d9"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e332eb17385c39c015ac1484b11dddcf9e4bf28fc8243327f85137c4524c84702276298ca74e49c1726eedf283e19844c6f3ebedb627bb10659a36f175bc4cb7b590000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002017f40ce4070fbad2d2a76c92352deed4877d8a4d1833d355cf538121201dd5d9", "gas_used": 24663, "transaction_hash": "0xd32a8af4a7d8a0932400d827f4623236c17437b635b06c5f209779cb9fe40802"}
{"function": "uniswapV3SwapCallback", "params": [20294417889786399686436364483252709547932295106168781868354585531672353192618, -43650163961676475196685416505971751582329319519119149670906948969639469238942, "0xf574f83499636fbf88ad3c2802098cd388011149d1e2c6420e3cf7241938f562"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e332cde3bc49d39f3b7e010cc5da2e5422e9fd8dec0675ee01cc687b37963223aaa9f7ee1f98c60cb8f9376bc156b529eeb22999a203515586283ddb8ecad26356200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020f574f83499636fbf88ad3c2802098cd388011149d1e2c6420e3cf7241938f562", "gas_used": 24663, "transaction_hash": "0x5136d74612c383e21d81a8ac9ccc8ede5c0bc622360752b724b270ab1fe60424"}
{"function": "swapForExact1Multi", "params": ["0x43cc6e87b5b354f569dde656d7f70d78d46d7ff2", "0xf3d092541d2c0d60a920462b05464c5c8564721b", "0xdd38de0b60447b0bcd729e500d35a4eb54b06ce6", 5648], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b6800000000000000000000000043cc6e87b5b354f569dde656d7f70d78d46d7ff2000000000000000000000000f3d092541d2c0d60a920462b05464c5c8564721b000000000000000000000000dd38de0b60447b0bcd729e500d35a4eb54b06ce60000000000000000000000000000000000000000000000000000000000001610", "gas_used": 24526, "transaction_hash": "0x1127001f3d87c7099ef1937ff415a03a383916e1e98fec3e469c94131488611d"}
{"function": "swapForExact0Multi", "params": ["0x0ee59e8dc60e6cc00884664ca7942fb3425497f2", "0xdd74c72f36050a4d86b0aaadf778670ad50c7036", "0x67b41ecf7c2f6f3a06fa5feed8f134ef62aeb80a", 33838], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c70000000000000000000000000ee59e8dc60e6cc00884664ca7942fb3425497f2000000000000000000000000dd74c72f36050a4d86b0aaadf778670ad50c703600000000000000000000000067b41ecf7c2f6f3a06fa5feed8f134ef62aeb80a000000000000000000000000000000000000000000000000000000000000842e", "gas_used": 24547, "transaction_hash": "0xbb4d77cc0a08a3c23818f6ce8739a7d09532ba2de96d7e27af5ceb83b84f7649"}
{"function": "uniswapV3SwapCallback", "params": [12595896416117480591544828331254412731004927930819526059618835342326452403897, -48856288666032438256922526630138548651993164589309489317064979836424828056332, "0xeba98a35188da63d8b6154256f61d723728eebcd1537a0a213173ae220c706a4"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e331bd9065499d10c3fc32e3043c623233a2a4e28d9eaa9ad1e496d4ac576533eb993fc520fcd4ad7cad45050827688dab0732e1b923256278b4ea3daae32028cf400000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020eba98a35188da63d8b6154256f61d723728eebcd1537a0a213173ae220c706a4", "gas_used": 24663, "transaction_hash": "0xb56816be7e1ee0e9b09dc5757496827809777dda814a6917e419e0c4082fee22"}
{"function": "swapForExact1Multi", "params": ["0x84e68f0c19c572c32c9c3042bcd5feefcafa2a90", "0xf568983c27d7b13c03a00c33e815045c1e6e6721", "0xa7fe85b71737b82378b71a895184a0e16841ed61", 11922], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b6800000000000000000000000084e68f0c19c572c32c9c3042bcd5feefcafa2a90000000000000000000000000f568983c27d7b13c03a00c33e815045c1e6e6721000000000000000000000000a7fe85b71737b82378b71a895184a0e16841ed610000000000000000000000000000000000000000000000000000000000002e92", "gas_used": 24526, "transaction_hash": "0xc4700897e04ba0cbe188b638d8fb1bd786ea9df846329995a041162e8c10bf8c"}
{"function": "swapForExact0Multi", "params": ["0xe28a7314dada30119f8f5f8f77012c51372533fe", "0x93ffbb2d2aba6ab8e0d1c89b82b13b61d85f54ab", "0x8c2cb377b697236d2728f8579a6857fdd3796cb0", 89049], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c7000000000000000000000000e28a7314dada30119f8f5f8f77012c51372533fe00000000000000000000000093ffbb2d2aba6ab8e0d1c89b82b13b61d85f54ab0000000000000000000000008c2cb377b697236d2728f8579a6857fdd3796cb00000000000000000000000000000000000000000000000000000000000015bd9", "gas_used": 24559, "transaction_hash": "0xccf21e854e056ab6f9d7405e03fe8401077ced63203b9419f93664fe0d3fd8eb"}
{"function": "swapForExact1Multi", "params": ["0xcc89168b6284fed2433fa1b966dd40654c4a7c29", "0xb9f63f3db3727d8bee978ca0928717c7b2d0bf82", "0x8fd0448f7c7418da5cf8aca1bcc2c46e3440da81", 53162], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b68000000000000000000000000cc89168b6284fed2433fa1b966dd40654c4a7c29000000000000000000000000b9f63f3db3727d8bee978ca0928717c7b2d0bf820000000000000000000000008fd0448f7c7418da5cf8aca1bcc2c46e3440da81000000000000000000000000000000000000000000000000000000000000cfaa", "gas_used": 24526, "transaction_hash": "0x6cea61cb53273c060155d2625ef1f66a8375d9014268f31097fd3ed075212950"}
{"function": "uniswapV3SwapCallback", "params": [14208091643631782057667792681898393080988847940144888594098312818037753451480, -11116425412402806503582129293543312142385216948165556640542549931577969479134, "0x526875d4dbc97d0be9bf5d8ec1ccf79acd91d0a4e67cba891ff4dc2f1b8676e4"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e331f697eb12411bbfae6e66a1f0bb9da39433bb8fc8aa955c18ae976bfaf2913d8e76c5380ddd7e53ab70e87ecc8b29a1158fdf6480c79ca6e19fefbcb92a3f22200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020526875d4dbc97d0be9bf5d8ec1ccf79acd91d0a4e67cba891ff4dc2f1b8676e4", "gas_used": 24663, "transaction_hash": "0x566af0974431f33364c34dd3e049d009ca2ab8d8d367b2171c17708f673cc120"}
{"function": "swapForExact1Multi", "params": ["0x09d4d92ebd85660c7ea9e64a4ddaf8cf2fd51b2b", "0x07cbdd5bda687d6cde8fc16e932634a1d39b185c", "0x40feaf3af7f3f8d1df1ba4ecd1c2d1bb3747e744", 70355], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b6800000000000000000000000009d4d92ebd85660c7ea9e64a4ddaf8cf2fd51b2b00000000000000000000000007cbdd5bda687d6cde8fc16e932634a1d39b185c00000000000000000000000040feaf3af7f3f8d1df1ba4ecd1c2d1bb3747e74400000000000000000000000000000000000000000000000000000000000112d3", "gas_used": 24538, "transaction_hash": "0xd0309910a5c8f4f15d8af751074aebad700e4527b9c1fda271e4970e2e57e759"}
{"function": "swapForExact0Multi", "params": ["0x4b2ccf328519fdca63dbf6cda3f3378a7b2672f9", "0x7d7e825ce0777c4edfb40ff048dfa52dc5a461f2", "0xff58bddbb33c2dbf64e739427127e9154dcf85ac", 33894], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c70000000000000000000000004b2ccf328519fdca63dbf6cda3f3378a7b2672f90000000000000000000000007d7e825ce0777c4edfb40ff048dfa52dc5a461f2000000000000000000000000ff58bddbb33c2dbf64e739427127e9154dcf85ac0000000000000000000000000000000000000000000000000000000000008466", "gas_used": 24547, "transaction_hash": "0x802d15f322da24aeac9079b9ba1089ef0407bef3f399791ec59dbaedd7472717"}
{"function": "swapForExact0Multi", "params": ["0x13b57714ce3608570773cfb7ca9b0d308207b1db", "0x09c09958405620542321baf4b3c33bcbd01ba4b3", "0xb81213de5fc8bf3bc31733367b9469d1ea8c68ff", 71485], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c700000000000000000000000013b57714ce3608570773cfb7ca9b0d308207b1db00000000000000000000000009c09958405620542321baf4b3c33bcbd01ba4b3000000000000000000000000b81213de5fc8bf3bc31733367b9469d1ea8c68ff000000000000000000000000000000000000000000000000000000000001173d", "gas_used": 24559, "transaction_hash": "0xfac3e49cca9d3a3a9c367ed35bc63b238ebd25fbf579e42b6fcad33586ce5e06"}
{"function": "uniswapV3SwapCallback", "params": [41370925750452333062510026076309906231676494546623426771219456701515495575669, 22397064256993172284597527835944047917748351320353020162723705535100082255297, "0x09820fdcb922eaf68cc4f41f24ca2e852b1bac03f4ba5a40a708e242337d51f2"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e335b771d3a8837facb23e8f51ac7217b85c0946be0db0c4bd8d36c7c887feb107531844a04fe69fd22d79e64c656f2edf57b8a0af0c16d864cff7a0a5a95a4f5c10000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002009820fdcb922eaf68cc4f41f24ca2e852b1bac03f4ba5a40a708e242337d51f2", "gas_used": 24663, "transaction_hash": "0x3998a469174ab11dac569a81297dd724e2f4d8fda79ab98a7409a303b2a524b2"}
{"function": "swapForExact1Multi", "params": ["0x2a701db2b540d81a17e8e46749cba6b65e40c71c", "0xb73faf7270e8a1f5e6581728bbfbcb00907d0a81", "0x2351256d0a96d6bc14d7505f0598ac73e8b071ee", 90186], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b680000000000000000000000002a701db2b540d81a17e8e46749cba6b65e40c71c000000000000000000000000b73faf7270e8a1f5e6581728bbfbcb00907d0a810000000000000000000000002351256d0a96d6bc14d7505f0598ac73e8b071ee000000000000000000000000000000000000000000000000000000000001604a", "gas_used": 24526, "transaction_hash": "0xc4996415c3d42fecaa574ff47d5bcd034fc79ea7c19d777dd4e7e9a3563ea88b"}
{"function": "uniswapV3SwapCallback", "params": [-908005086979200956138570786739001389205114795988000666771734030735499078913, -7678508943730571498676177950786819718291445587421469324991693755746589776890, "0x2c8dc9acccf20d9e4fb342f0f48f755ae243f9eaaadf54b43db21428c319839d"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e33fdfe165b77182fc30552fcaefe9a1766b40e5a7d2524d9586378fed0f5efd2ffef061e31fa624396d3a9cba57043e7df5c6b2b18ccf559b03b12e6bc00056406000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000202c8dc9acccf20d9e4fb342f0f48f755ae243f9eaaadf54b43db21428c319839d", "gas_used": 24651, "transaction_hash": "0xff36d269a43da8840004489fb112b8536c50dab49038e8d38e231a966465523a"}
{"function": "uniswapV3SwapCallback", "params": [19867845268916720128965526707126057087776988235117706621334172038689728560529, -20144949161315255873659785947676925410056434268934244537416790263584552963078, "0x69aa05a6c4fa63a4316cb9fb0a62b91f17a01b923a69b4bced25cd86693e135b"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e332beccd4ab945a3479029961b1a09978fceace2d879f84ef1a7a5b175157cfd91d3765ce2a7d80ceff9174b5ca4d9537bda5ac76572adb57a649fc2120fab33fa0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002069aa05a6c4fa63a4316cb9fb0a62b91f17a01b923a69b4bced25cd86693e135b", "gas_used": 24663, "transaction_hash": "0x7f4b6cb81bfd9c2ae881121b36ef3cf0988d7b30f9d8a9efde1f320e69996db3"}
{"function": "uniswapV3SwapCallback", "params": [-43967608544723733628649291831566673525073779430199886466825018805042723097771, -48537285706906310117719799798269136162735085996692265579115449073519840500804, "0xfbf35a539fe9e1bcab3a41318466211d87e5d3077a2be6fcf0e4cab3f7636298"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e339ecb37278c8744a3ebf4a6f04e776f7d2d44252e9fb73ed41f259d0b0dfcf35594b0dead2ec5b8aa646798d98a95caf4ec0da5424573146374092886d51363bc00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020fbf35a539fe9e1bcab3a41318466211d87e5d3077a2be6fcf0e4cab3f7636298", "gas_used": 24663, "transaction_hash": "0x8b906721be69aeca80837de5a6b0ba8ec5533b399acc9c1729d5a865215d13eb"}
{"function": "uniswapV3SwapCallback", "params": [51808624978420949263356825487936134425912201740026264014016401859618597624979, 7147334198800691127437243566714945482546204790109816387718105366382272858859, "0x383445cb4c7af2a401a633c7fde636728cb10447ae3b43e794d067fd45438190"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e33728aa4804942690940927be6c8700df312460a0e275ff178f27fc7f6e315dc930fcd3f6fb64c3c5a909208961d1405a6d0b08d0ec76359772fa0018318fc4aeb00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020383445cb4c7af2a401a633c7fde636728cb10447ae3b43e794d067fd45438190", "gas_used": 24663, "transaction_hash": "0xa7c58d063dd3f6b77bb25239ea003b05218d5f4da22da18c28fdfae84cb618d9"}
{"function": "swapForExact1Multi", "params": ["0xcc0e726e64e6deeff67cfeb5d586cf40dd8a4201", "0x4c4cfbe9e5f15df142a5c9a27f37169398e63bd6", "0x8a6b21993e9a773d4256c7de41e67d88b162e05f", 70186], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b68000000000000000000000000cc0e726e64e6deeff67cfeb5d586cf40dd8a42010000000000000000000000004c4cfbe9e5f15df142a5c9a27f37169398e63bd60000000000000000000000008a6b21993e9a773d4256c7de41e67d88b162e05f000000000000000000000000000000000000000000000000000000000001122a", "gas_used": 24538, "transaction_hash": "0xd2fc40c917663460f2e21860b9de6fd4f7d8c1db4be48f3d2d3e2c54e0a00801"}
{"function": "uniswapV3SwapCallback", "params": [-3241935228678457958027912752319275696820066683706066722106202954631398865722, -44725419910100303384248933842914874719812311341916688242919307357459870999044, "0xdc33fe2afefdbe48b4d858d45d97af984f5e19d4d1c4de28c0bb730ceba204c4"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e33f8d5213318b7ea3268cb7b51b3840831306d482968d9b924b8128a5d494b44c69d1e4f35c616a4192c9507de41ef2f0021ee92d5b042d907299dad0e5e169dfc00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020dc33fe2afefdbe48b4d858d45d97af984f5e19d4d1c4de28c0bb730ceba204c4", "gas_used": 24651, "transaction_hash": "0xd68c34161d30fb381b1ee36a596eaa1775d8642b0d94b7f0f1ce5580c67c948d"}
{"function": "swapForExact0Multi", "params": ["0x661525d797aadc0ad2465deb713ddbb9f4c1cea5", "0x7588c729c6e39aea314106f3581e1dea2fbc5d04", "0xae7a2f9540992f0a90fabc08a968ab5be2085563", 29522], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c7000000000000000000000000661525d797aadc0ad2465deb713ddbb9f4c1cea50000000000000000000000007588c729c6e39aea314106f3581e1dea2fbc5d04000000000000000000000000ae7a2f9540992f0a90fabc08a968ab5be20855630000000000000000000000000000000000000000000000000000000000007352", "gas_used": 24547, "transaction_hash": "0x64dadf4b02549b38ad2da3e53935e51af050d681fb691cd8ef3f4ddfae99c7f2"}
{"function": "uniswapV3SwapCallback", "params": [3537717992340935702233670157897830718137695863829275740894541399195050337399, -2617203538181792751076736926105130448757166336153962176865188675935007509764, "0x75c6de25a952b3c30bda4b213942ee40391e45b46d12b9077088ce0f4b26fb0e"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e3307d247055daaacd67f42ffc790243a1db70cea2c2c34e227926ef2f01f606477fa36b71d62c0a6c745253a746ae815abdf338aeaff830db225f0bb8d4b5272fc0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002075c6de25a952b3c30bda4b213942ee40391e45b46d12b9077088ce0f4b26fb0e", "gas_used": 24663, "transaction_hash": "0xb29b2f35a5734277e1f98d0e511015ae53600176b2cd6468eaca999b94cbff84"}
{"function": "uniswapV3SwapCallback", "params": [-7696833451842122531729347950228454247800916331591302482747679261878091002428, 13936456685298986031185676347651708348140121425407459394611299821706715442182, "0xcdb164137a41ef136fbaa2812791cf4fff6e83c393114475923080ef46267999"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e33eefbbf243233f056e6fa6f5e717ff93b2bc8faf62c1ad7b3eb86f00cd6dfcdc41ecfc1448f1a838c7255164e936a77e47508dc76e166a53a766a02d4dda5ac0600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020cdb164137a41ef136fbaa2812791cf4fff6e83c393114475923080ef46267999", "gas_used": 24663, "transaction_hash": "0x6f715129bb28209b8717352f7bf3d332aa50c1366d0004b043d5ca6c0da86d02"}
{"function": "uniswapV3SwapCallback", "params": [12743125896828701002830155834503793907857991387731464364964639889971865707356, 27091202175052661696947230354222910923215507744421164481341892308501459430111, "0x5c1089653106477f85a1c8561e8f50476c1eb529a14a4314992cfe54687641f2"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e331c2c5a898e1540f02cb8e7f8fa158368f75ecf9b4eda85c5c42fb3e7ec73e35c3be513b95f49aa9c656b0f18c45441ad6e22a1009ec8d7272e4893dcaa60eadf000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000205c1089653106477f85a1c8561e8f50476c1eb529a14a4314992cfe54687641f2", "gas_used": 24651, "transaction_hash": "0x83430060e89adb2e2a44a15ff7dc424cd4d06abd522cdf1b6ef625a411566902"}
{"function": "uniswapV3SwapCallback", "params": [3756467625262424481422974009353348373451831444076662516409357497030971765552, 33738402980281628551788458645961259829307390896803056222500440011749340443033, "0xf0d690cd9cbb2a3c1e832059484cf5895c728229ddecc8a3dcd6ec6926b6323b"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e33084e15d8346ecaf66a5b83595c123333f928a39b325125f8c9e53783329833304a9742667d022d0494eaf99f6703bd161ca17b79e99bdbd7ba0f65a7be7f719900000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020f0d690cd9cbb2a3c1e832059484cf5895c728229ddecc8a3dcd6ec6926b6323b", "gas_used": 24663, "transaction_hash": "0x5e496d0673d49af3f2e8a2d472d3ca2980683b9d0c9d352c79814c2c350016ee"}
{"function": "swapForExact1Multi", "params": ["0xa82898e64f958f7b0824b2a497334d61bac57ebd", "0x1037bc2c2fb3c44a6ea935a3c7c667595178f5f5", "0x8dbd11dec54d3ff076b01552527900be8c3505c8", 14758], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b68000000000000000000000000a82898e64f958f7b0824b2a497334d61bac57ebd0000000000000000000000001037bc2c2fb3c44a6ea935a3c7c667595178f5f50000000000000000000000008dbd11dec54d3ff076b01552527900be8c3505c800000000000000000000000000000000000000000000000000000000000039a6", "gas_used": 24514, "transaction_hash": "0x66d3d6678d0a22cf02d700f0c9ebecbe662a0e9dce7d5899d33c16a4891cb1c8"}
{"function": "swapForExact0Multi", "params": ["0x74e779c8df177759f25040f0c77bdcde22788106", "0x8d1eb81e220f4115ac88f09a711fb5cc65c71480", "0x07a4bb7326b9008e3eb6b84a9ce1b4b7e8eb48f0", 28118], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c700000000000000000000000074e779c8df177759f25040f0c77bdcde227881060000000000000000000000008d1eb81e220f4115ac88f09a711fb5cc65c7148000000000000000000000000007a4bb7326b9008e3eb6b84a9ce1b4b7e8eb48f00000000000000000000000000000000000000000000000000000000000006dd6", "gas_used": 24535, "transaction_hash": "0xfcb5a06171e573bd6f3049053a7e68d4a9d57e43da0662c40e9b296f24b8ee61"}
{"function": "uniswapV3SwapCallback", "params": [-56566243148981919615969134616299070580528965811000866754275603343572364901261, 29180404415933227370156658444079486284511574019132445440619253764238337892421, "0x498c268452d1b6f7b87691042d2265b567ab58ed3f846553feca142e346b324b"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e3382f0a415e7b8999aa64826413b63e49faa18533b77978312b9b209cbce00c4734083860b64298ff0e7475f65d51115a70c7c218fdfbcea3d3c76cdee919fe04500000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020498c268452d1b6f7b87691042d2265b567ab58ed3f846553feca142e346b324b", "gas_used": 24651, "transaction_hash": "0x4d895f9ad5c1b0b0e629f88fe6f8dbcbcbfb4ce4b56f5552a4139a9d9f284f26"}
{"function": "uniswapV3SwapCallback", "params": [37235821642406446497917293263865307612476994289659695163549126048048337950082, 457432944156012054975455795204099658881393053156737238630943560566388034765, "0x80f23af7a7f6c8fd82f91ff021d7c521a85fa299ed36107b670090cc5ae3fee5"], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m1054\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, line \u001b[0;1;34m59\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.uniswapV3SwapCallback\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) public override {\n\u001b[0;2;37m        emit SwapCallback(amount0Delta, amount1Delta);\n\n\u001b[0;2;37m        (address[] memory pools, address payer) = \u001b[0;mabi.decode(data, (address[], address))\u001b[0;2;37m;\n\n\u001b[0;2;37m        if (pools.length == 1) {\n\u001b[0;2;37m            // get the address and amount of the token that we need to pay\u001b[0;m", "raw_error": "0xfa461e335252ba6a9e7fd2a95dce7816c3e02ff95347ff039e37a88695b6643a822495820102e5dae660328c2f23a1a1b7b0b75e31278bfb48bdd00a5091e78c09780ccd0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002080f23af7a7f6c8fd82f91ff021d7c521a85fa299ed36107b670090cc5ae3fee5", "gas_used": 24651, "transaction_hash": "0xaeb7a34672fedd21ef4df6bfe0ed6559e3c988d6def9393ef71ea080466a380c"}
{"function": "swapForExact1Multi", "params": ["0xd9543169f61d69364f2bc12afcabeaeff1147dae", "0x437d36633525df020414b42b078cd45f66c30f3e", "0x33b640078a6d7219e0f8c92b3810b23db369a22d", 37705], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b68000000000000000000000000d9543169f61d69364f2bc12afcabeaeff1147dae000000000000000000000000437d36633525df020414b42b078cd45f66c30f3e00000000000000000000000033b640078a6d7219e0f8c92b3810b23db369a22d0000000000000000000000000000000000000000000000000000000000009349", "gas_used": 24526, "transaction_hash": "0xbfd69f641524ca000c4c4dfebd3c25a22904e5ca62cfc2291809793345b18eb0"}
{"function": "swapForExact1Multi", "params": ["0x4df9846e68912d2c29a59b97b631cf49a29edb7b", "0xcaac7c253094bf3f6d760c574679e5fcc89f6f87", "0x98c0f44e341c1b3cf0643c3accc1dbe0dc36db3a", 70938], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc35a2b680000000000000000000000004df9846e68912d2c29a59b97b631cf49a29edb7b000000000000000000000000caac7c253094bf3f6d760c574679e5fcc89f6f8700000000000000000000000098c0f44e341c1b3cf0643c3accc1dbe0dc36db3a000000000000000000000000000000000000000000000000000000000001151a", "gas_used": 24538, "transaction_hash": "0xa609d36962cd711de6771971abcfee81f9f47499bef5a7385e295920cff15bb0"}
{"function": "swapForExact0Multi", "params": ["0x3238606bc28dd98bc0c9794c53f441ecfecda183", "0x130078845a34fcc6ee614c1561e557f541668cdc", "0x2db26273073b7528fe00d0b3cd05e20de8cc4a0b", 80742], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c70000000000000000000000003238606bc28dd98bc0c9794c53f441ecfecda183000000000000000000000000130078845a34fcc6ee614c1561e557f541668cdc0000000000000000000000002db26273073b7528fe00d0b3cd05e20de8cc4a0b0000000000000000000000000000000000000000000000000000000000013b66", "gas_used": 24535, "transaction_hash": "0x25f41926436e30e19337ed89d48da664c81960bfc681f613d16665d6d5f871a0"}
{"function": "swapForExact0Multi", "params": ["0xe92d3960ea77542f0ec06ccaa81d1321f83bc73b", "0xc8936cb3a1ae0c532f6f4649baf2e2d10892589d", "0x9bb1ec95095bfff7567e408ac5c40fb773c1d369", 99921], "error": "revert\n\u001b[0;2;37mTrace step \u001b[0;1;34m-1\u001b[0;2;37m, program counter \u001b[0;1;34m726\u001b[0;2;37m:\n  \u001b[0;2;37mFile \u001b[0;1;35m\"contracts/test/TestUniswapV3Router.sol\"\u001b[0;2;37m, lines \u001b[0;1;34m41\u001b[0;2;37m-\u001b[0;1;34m47\u001b[0;2;37m, in \u001b[0;1;36mTestUniswapV3Router.swapForExact1Multi\u001b[0;2;37m:    \u001b[0;2;37m\n\u001b[0;2;37m    ) external {\n\u001b[0;2;37m        address[] memory pools = new address[](1);\n\u001b[0;2;37m        pools[0] = poolInput;\n\u001b[0;2;37m        \u001b[0;mIUniswapV3Pool(poolOutput).swap(\n\u001b[0;m            recipient,\n\u001b[0;m            true,\n\u001b[0;m            -amount1Out.toInt256(),\n\u001b[0;m            TickMath.MIN_SQRT_RATIO + 1,\n\u001b[0;m            abi.encode(pools, msg.sender)\n\u001b[0;m        )\u001b[0;2;37m;\n\u001b[0;2;37m    }\n\n\u001b[0;2;37m    event SwapCallback(int256 amount0Delta, int256 amount1Delta);\u001b[0;m", "raw_error": "0xc96aa6c7000000000000000000000000e92d3960ea77542f0ec06ccaa81d1321f83bc73b000000000000000000000000c8936cb3a1ae0c532f6f4649baf2e2d10892589d0000000000000000000000009bb1ec95095bfff7567e408ac5c40fb773c1d3690000000000000000000000000000000000000000000000000000000000018651", "gas_used": 24559, "transaction_hash": "0x227ccf9604ace6a70fe99670e097c85e76d1d43b77f5d6d7e8acf7ea7b3aedd4"}
